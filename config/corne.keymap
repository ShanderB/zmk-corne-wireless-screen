/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        AltLayer1: AltLayer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "Alt-Layer 1";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&tog 2>;
        };

        BackAlt: BackAlt {
            compatible = "zmk,behavior-tap-dance";
            label = "Backspace-Alt";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LEFT_ALT>;

            tapping-term-ms = <160>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E      &kp R      &kp T       &kp Y         &kp U  &kp I       &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D      &kp F      &kp G       &kp H         &kp J  &kp K       &kp L    &kp SEMI  &kp RET
&kp LCTRL       &kp Z  &kp X  &kp C      &kp V      &kp B       &kp N         &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp DEL
                              &kp ENTER  &kp SPACE  &BackAlt    &kp LEFT_GUI  &mo 2  &AltLayer1
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none  &kp MINUS  &none    &none  &none  &none   &none  &none  &none
&kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none  &kp EQUAL  &none    &none  &none  &none   &none  &none  &none
&kp LSHFT      &none                 &kp APOS               &none  &none      &none    &none  &none  &none   &none  &none  &none
                                                            &none  &none      &none    &none  &none  &tog 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&none      &none   &none   &none     &none   &none        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &none   &none
&kp LSHFT  &none   &none   &none     &none   &none        &none     &none     &none     &none      &none   &bt BT_CLR_ALL
                           &kp LGUI  &none   &kp SPACE    &kp RET   &tog 2    &kp RALT
            >;
        };
    };
};
